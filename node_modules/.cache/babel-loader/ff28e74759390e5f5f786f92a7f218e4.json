{"ast":null,"code":"import _objectSpread from\"/Users/tahaismail/web_projects/memory-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tahaismail/web_projects/memory-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import Title from'./Title';import Scoreboard from'./Scoreboard';import Card from'./Card';import EndMessage from'./EndMessage';import Bulbasaur from'./assets/bulbasaur.png';import Eevee from'./assets/eevee.png';import Jigglypuff from'./assets/jigglypuff.png';import Mawile from'./assets/mawile.png';import Jirachi from'./assets/jirachi.png';import Pikachu from'./assets/pikachu.png';import Piplup from'./assets/piplup.png';import Ralts from'./assets/ralts.png';import Riolu from'./assets/riolu.png';import Sableye from'./assets/sableye.png';import Torchic from'./assets/torchic.png';import Voltorb from'./assets/voltorb.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Game(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentScore=_useState2[0],setCurrentScore=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),highScore=_useState4[0],setHighScore=_useState4[1];var _useState5=useState([{name:'Bulbasaur',pic:Bulbasaur,hit:false},{name:'Eevee',pic:Eevee,hit:false},{name:'Jigglypuff',pic:Jigglypuff,hit:false},{name:'Mawile',pic:Mawile,hit:false},{name:'Jirachi',pic:Jirachi,hit:false},{name:'Pikachu',pic:Pikachu,hit:false},{name:'Piplup',pic:Piplup,hit:false},{name:'Ralts',pic:Ralts,hit:false},{name:'Riolu',pic:Riolu,hit:false},{name:'Sableye',pic:Sableye,hit:false},{name:'Torchic',pic:Torchic,hit:false},{name:'Voltorb',pic:Voltorb,hit:false}]),_useState6=_slicedToArray(_useState5,2),pokeCards=_useState6[0],setPokeCards=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),gameOver=_useState8[0],setGameOver=_useState8[1];var selectCard=function selectCard(e){var index=e.target.parentNode.classList.item(1);if(pokeCards[index].hit)setGameOver(true);else if(!pokeCards[index].hit){var updatedCard=[_objectSpread(_objectSpread({},pokeCards[index]),{},{hit:true})];var updatedCardList=pokeCards.slice(0,index).concat(updatedCard.concat(pokeCards.slice(index+1)));setPokeCards(shuffle(updatedCardList));}};var cardDisplay=useRef(/*#__PURE__*/_jsx(\"div\",{className:\"card-display\",children:pokeCards.map(function(card,index){return/*#__PURE__*/_jsx(Card,{pokeName:card.name,pokePic:card.pic,eventListener:selectCard,no:index},index);})}));var display=useRef(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsx(Scoreboard,{currentScore:currentScore,highScore:highScore}),cardDisplay.current]}));var restart=function restart(){setCurrentScore(0);var resetCards=pokeCards.map(function(card){return _objectSpread(_objectSpread({},card),{},{hit:true});});setPokeCards(shuffle(resetCards));setGameOver(false);display.current=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsx(Scoreboard,{currentScore:currentScore,highScore:highScore}),cardDisplay.current]});};useEffect(function(){cardDisplay.current=/*#__PURE__*/_jsx(\"div\",{className:\"card-display\",children:pokeCards.map(function(card,index){return/*#__PURE__*/_jsx(Card,{pokeName:card.name,pokePic:card.pic,eventListener:selectCard,no:index},index);})});});useEffect(function(){var score=pokeCards.reduce(function(prev,cur){return prev.hit+cur.hit;});setCurrentScore(score);if(currentScore>highScore)setHighScore(score);},[pokeCards,currentScore,highScore]);useEffect(function(){if(gameOver){display.current=/*#__PURE__*/_jsx(EndMessage,{finalScore:currentScore,highScore:highScore,restartGame:restart});}});return/*#__PURE__*/_jsx(\"div\",{children:display.current});}//function taken from \n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//Fisher-Yates Shuffle\nfunction shuffle(array){var currentIndex=array.length;var randomIndex;while(currentIndex!==0){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;var _ref=[array[randomIndex],array[currentIndex]];array[currentIndex]=_ref[0];array[randomIndex]=_ref[1];}return array;}export default Game;","map":{"version":3,"sources":["/Users/tahaismail/web_projects/memory-game/src/components/Game.js"],"names":["React","useState","useEffect","useRef","Title","Scoreboard","Card","EndMessage","Bulbasaur","Eevee","Jigglypuff","Mawile","Jirachi","Pikachu","Piplup","Ralts","Riolu","Sableye","Torchic","Voltorb","Game","currentScore","setCurrentScore","highScore","setHighScore","name","pic","hit","pokeCards","setPokeCards","gameOver","setGameOver","selectCard","e","index","target","parentNode","classList","item","updatedCard","updatedCardList","slice","concat","shuffle","cardDisplay","map","card","display","current","restart","resetCards","score","reduce","prev","cur","array","currentIndex","length","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Title from './Title';\nimport Scoreboard from './Scoreboard';\nimport Card from './Card';\nimport EndMessage from './EndMessage';\nimport Bulbasaur from './assets/bulbasaur.png';\nimport Eevee from './assets/eevee.png';\nimport Jigglypuff from './assets/jigglypuff.png';\nimport Mawile from './assets/mawile.png';\nimport Jirachi from './assets/jirachi.png';\nimport Pikachu from './assets/pikachu.png';\nimport Piplup from './assets/piplup.png';\nimport Ralts from './assets/ralts.png';\nimport Riolu from './assets/riolu.png';\nimport Sableye from './assets/sableye.png';\nimport Torchic from './assets/torchic.png';\nimport Voltorb from './assets/voltorb.png';\n\n\nfunction Game() {\n    let [currentScore, setCurrentScore] = useState(0);\n    let [highScore, setHighScore] = useState(0);\n    let [pokeCards, setPokeCards] = useState([\n        {name: 'Bulbasaur', pic: Bulbasaur, hit: false},\n        {name: 'Eevee', pic: Eevee, hit: false},\n        {name: 'Jigglypuff', pic: Jigglypuff, hit: false},\n        {name: 'Mawile', pic: Mawile, hit: false},\n        {name: 'Jirachi', pic: Jirachi, hit: false},\n        {name: 'Pikachu', pic: Pikachu, hit: false},\n        {name: 'Piplup', pic: Piplup, hit: false},\n        {name: 'Ralts', pic: Ralts, hit: false},\n        {name: 'Riolu', pic: Riolu, hit: false},\n        {name: 'Sableye', pic: Sableye, hit: false},\n        {name: 'Torchic', pic: Torchic, hit: false},\n        {name: 'Voltorb', pic: Voltorb, hit: false}\n    ]);\n    let [gameOver, setGameOver] = useState(false);\n\n    const selectCard = (e) => {\n        let index = e.target.parentNode.classList.item(1);\n        if (pokeCards[index].hit) setGameOver(true);\n        else if (!pokeCards[index].hit) {\n            let updatedCard = [{...pokeCards[index], hit: true}];\n            let updatedCardList = pokeCards.slice(0, index)\n                .concat(updatedCard.concat(pokeCards.slice(index + 1)));\n            setPokeCards(shuffle(updatedCardList));\n        }\n    }\n\n  \n    let cardDisplay = useRef(<div className='card-display'>\n        {pokeCards.map((card, index) => <Card \n            pokeName={card.name} \n            pokePic={card.pic}\n            eventListener={selectCard}\n            key={index}\n            no={index}\n            />)}\n            </div>);\n\n    let display = useRef(<div>\n        <Title />\n        <Scoreboard \n            currentScore={currentScore} \n            highScore={highScore}\n            />\n        {cardDisplay.current}\n        </div>);\n\n    \n    const restart = () => {\n        setCurrentScore(0);\n        \n        let resetCards = pokeCards.map(card => {\n            return {...card, hit: true}\n        });\n        setPokeCards(shuffle(resetCards));\n        setGameOver(false);\n        display.current = \n            <div>\n                <Title />\n                <Scoreboard \n                    currentScore={currentScore} \n                    highScore={highScore}\n                />\n                    {cardDisplay.current}\n            </div>\n    }\n\n\n    \n\n    \n    useEffect(() => {\n        cardDisplay.current = \n            <div className='card-display'>\n                {pokeCards.map((card, index) => <Card \n                pokeName={card.name} \n                pokePic={card.pic}\n                eventListener={selectCard}\n                key={index}\n                no={index}\n                />)}\n            </div>\n    });\n\n\n    useEffect(() => {\n        let score = pokeCards.reduce((prev, cur) => prev.hit + cur.hit);\n        setCurrentScore(score);\n        if (currentScore > highScore) setHighScore(score);\n    }, [pokeCards, currentScore, highScore]);\n\n    useEffect(() => {\n        if (gameOver) {\n            display.current = <EndMessage \n            finalScore={currentScore}\n            highScore={highScore}\n            restartGame={restart}\n        />\n        }\n    });\n\n    return(\n        <div>\n            {display.current}\n        </div>\n    );\n}\n\n//function taken from \n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//Fisher-Yates Shuffle\nfunction shuffle(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n    while(currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = \n            [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}