{"ast":null,"code":"var _jsxFileName = \"/Users/tahaismail/web_projects/memory-game/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Title from './Title';\nimport Scoreboard from './Scoreboard';\nimport Card from './Card';\nimport EndMessage from './EndMessage';\nimport Bulbasaur from './assets/bulbasaur.png';\nimport Eevee from './assets/eevee.png';\nimport Jigglypuff from './assets/jigglypuff.png';\nimport Mawile from './assets/mawile.png';\nimport Jirachi from './assets/jirachi.png';\nimport Pikachu from './assets/pikachu.png';\nimport Piplup from './assets/piplup.png';\nimport Ralts from './assets/ralts.png';\nimport Riolu from './assets/riolu.png';\nimport Sableye from './assets/sableye.png';\nimport Torchic from './assets/torchic.png';\nimport Voltorb from './assets/voltorb.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let [currentScore, setCurrentScore] = useState(0);\n  let [highScore, setHighScore] = useState(0);\n  let [pokeCards, setPokeCards] = useState([{\n    name: 'Bulbasaur',\n    pic: Bulbasaur,\n    hit: false\n  }, {\n    name: 'Eevee',\n    pic: Eevee,\n    hit: false\n  }, {\n    name: 'Jigglypuff',\n    pic: Jigglypuff,\n    hit: false\n  }, {\n    name: 'Mawile',\n    pic: Mawile,\n    hit: false\n  }, {\n    name: 'Jirachi',\n    pic: Jirachi,\n    hit: false\n  }, {\n    name: 'Pikachu',\n    pic: Pikachu,\n    hit: false\n  }, {\n    name: 'Piplup',\n    pic: Piplup,\n    hit: false\n  }, {\n    name: 'Ralts',\n    pic: Ralts,\n    hit: false\n  }, {\n    name: 'Riolu',\n    pic: Riolu,\n    hit: false\n  }, {\n    name: 'Sableye',\n    pic: Sableye,\n    hit: false\n  }, {\n    name: 'Torchic',\n    pic: Torchic,\n    hit: false\n  }, {\n    name: 'Voltorb',\n    pic: Voltorb,\n    hit: false\n  }]);\n  let [gameOver, setGameOver] = useState(false);\n\n  const selectCard = e => {\n    let index = parseInt(e.target.parentNode.classList.item(1));\n    if (pokeCards[index].hit) setGameOver(true);else if (!pokeCards[index].hit) {\n      let updatedCard = [{ ...pokeCards[index],\n        hit: true\n      }];\n      let updatedCardList = pokeCards.slice(0, index).concat(updatedCard.concat(pokeCards.slice(index + 1)));\n      setPokeCards(shuffle(updatedCardList));\n    }\n  };\n\n  const restart = () => {\n    setCurrentScore(0);\n    let resetCards = pokeCards.map(card => {\n      return { ...card,\n        hit: true\n      };\n    });\n    setPokeCards(shuffle(resetCards));\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    let score = pokeCards.reduce((prev, cur, index) => {\n      prev.hit + cur.hit;\n    }, 0);\n    setCurrentScore(score);\n    if (currentScore > highScore) setHighScore(score);\n  });\n\n  function setCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-display\",\n      children: pokeCards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        pokeName: card.name,\n        pokePic: card.pic,\n        eventListener: selectCard,\n        no: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 53\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(EndMessage, {\n      finalScore: currentScore,\n      highScore: highScore,\n      restartGame: restart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n      currentScore: currentScore,\n      highScore: highScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), setCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n} //function taken from \n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//Fisher-Yates Shuffle\n\n\n_s(Game, \"q7OeOHgY4HT6Xvf9yEdBAfCcXJg=\");\n\n_c = Game;\n\nfunction shuffle(array) {\n  let currentIndex = array.length;\n  let randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/tahaismail/web_projects/memory-game/src/components/Game.js"],"names":["React","useState","useEffect","Title","Scoreboard","Card","EndMessage","Bulbasaur","Eevee","Jigglypuff","Mawile","Jirachi","Pikachu","Piplup","Ralts","Riolu","Sableye","Torchic","Voltorb","Game","currentScore","setCurrentScore","highScore","setHighScore","pokeCards","setPokeCards","name","pic","hit","gameOver","setGameOver","selectCard","e","index","parseInt","target","parentNode","classList","item","updatedCard","updatedCardList","slice","concat","shuffle","restart","resetCards","map","card","score","reduce","prev","cur","setCards","array","currentIndex","length","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Title from './Title';\nimport Scoreboard from './Scoreboard';\nimport Card from './Card';\nimport EndMessage from './EndMessage';\nimport Bulbasaur from './assets/bulbasaur.png';\nimport Eevee from './assets/eevee.png';\nimport Jigglypuff from './assets/jigglypuff.png';\nimport Mawile from './assets/mawile.png';\nimport Jirachi from './assets/jirachi.png';\nimport Pikachu from './assets/pikachu.png';\nimport Piplup from './assets/piplup.png';\nimport Ralts from './assets/ralts.png';\nimport Riolu from './assets/riolu.png';\nimport Sableye from './assets/sableye.png';\nimport Torchic from './assets/torchic.png';\nimport Voltorb from './assets/voltorb.png';\n\n\nfunction Game() {\n    let [currentScore, setCurrentScore] = useState(0);\n    let [highScore, setHighScore] = useState(0);\n    let [pokeCards, setPokeCards] = useState([\n        {name: 'Bulbasaur', pic: Bulbasaur, hit: false},\n        {name: 'Eevee', pic: Eevee, hit: false},\n        {name: 'Jigglypuff', pic: Jigglypuff, hit: false},\n        {name: 'Mawile', pic: Mawile, hit: false},\n        {name: 'Jirachi', pic: Jirachi, hit: false},\n        {name: 'Pikachu', pic: Pikachu, hit: false},\n        {name: 'Piplup', pic: Piplup, hit: false},\n        {name: 'Ralts', pic: Ralts, hit: false},\n        {name: 'Riolu', pic: Riolu, hit: false},\n        {name: 'Sableye', pic: Sableye, hit: false},\n        {name: 'Torchic', pic: Torchic, hit: false},\n        {name: 'Voltorb', pic: Voltorb, hit: false}\n    ]);\n    let [gameOver, setGameOver] = useState(false);\n\n    const selectCard = (e) => {\n        let index = parseInt(e.target.parentNode.classList.item(1));\n        if (pokeCards[index].hit) setGameOver(true);\n        else if (!pokeCards[index].hit) {\n            let updatedCard = [{...pokeCards[index], hit: true}];\n            let updatedCardList = pokeCards.slice(0, index)\n                .concat(updatedCard.concat(pokeCards.slice(index + 1)));\n            setPokeCards(shuffle(updatedCardList));\n        }\n    }\n\n    const restart = () => {\n        setCurrentScore(0);\n        \n        let resetCards = pokeCards.map(card => {\n            return {...card, hit: true}\n        });\n        setPokeCards(shuffle(resetCards));\n        setGameOver(false);\n    }\n\n\n    useEffect(() => {\n        let score = pokeCards.reduce(\n            (prev, cur, index) => {\n                prev.hit + cur.hit\n            }, 0);\n        setCurrentScore(score);\n        if (currentScore > highScore) setHighScore(score);\n    });\n\n    function setCards() {\n        return (<div className='card-display'>\n                    {pokeCards.map((card, index) => <Card \n                        pokeName={card.name} \n                        pokePic={card.pic}\n                        eventListener={selectCard}\n                        key={index}\n                        no={index}\n                    />)}\n                </div>\n        );\n    }\n\n\n    if (gameOver) {\n        return (<EndMessage \n            finalScore={currentScore}\n            highScore={highScore}\n            restartGame={restart}\n            />\n        );\n    }\n\n    else return (\n        <div>\n            <Title />\n            <Scoreboard\n                currentScore={currentScore}\n                highScore={highScore}\n                />\n            {setCards()}\n        </div>\n    );\n}\n\n//function taken from \n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//Fisher-Yates Shuffle\nfunction shuffle(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n    while(currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = \n            [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}