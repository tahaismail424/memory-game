{"version":3,"sources":["components/Title.js","components/Scoreboard.js","components/Card.js","components/EndMessage.js","components/assets/bulbasaur.png","components/assets/eevee.png","components/assets/jigglypuff.png","components/assets/mawile.png","components/assets/jirachi.png","components/assets/pikachu.png","components/assets/piplup.png","components/assets/ralts.png","components/assets/riolu.png","components/assets/sableye.png","components/assets/torchic.png","components/assets/voltorb.png","components/Game.js","App.js","index.js"],"names":["Title","className","Scoreboard","props","currentScore","highScore","Card","pokeName","pokePic","eventListener","no","id","onClick","src","alt","EndMessage","finalScore","restartGame","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","Game","useState","setCurrentScore","setHighScore","name","pic","Bulbasaur","hit","Eevee","Jigglypuff","Mawile","Jirachi","Pikachu","Piplup","Ralts","Riolu","Sableye","Torchic","Voltorb","pokeCards","setPokeCards","gameOver","setGameOver","selectCard","e","index","target","parentNode","classList","item","updatedCard","updatedCardList","slice","concat","cardDisplay","useRef","map","card","display","current","restart","resetCards","useEffect","score","reduce","prev","cur","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c619f42e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Title() {\n    return (\n        <div>\n            <h1>Welcome to the <p className='pokemon-title'>Pok√©mon</p> memory game!</h1>\n            <h2>Click the cards you haven't clicked before in order to score points</h2>\n        </div>\n    )\n}\n\nexport default Title;\n","import React from 'react'\n\nfunction Scoreboard(props) {\n\n    const { currentScore, highScore } = props;\n    return (\n        <div className='scoreboard'>\n            <h3>Scoreboard</h3>\n            <p>Current Score: {currentScore}</p>\n            <p>High Score: {highScore}</p>\n        </div>\n    )\n}\n\nexport default Scoreboard\n","import React from 'react';\n\nfunction Card(props) {\n    const { pokeName, pokePic, eventListener, no } = props;\n\n    return (\n        <div className={`card ${no}`} id={pokeName}>\n            <button className='card-button' onClick={eventListener}></button>\n            <img src={pokePic} alt={`${pokeName}-pic`}></img>\n            <h4>{pokeName}</h4>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from 'react'\n\nfunction EndMessage(props) {\n    const { finalScore, highScore, restartGame } = props;\n    return (\n        <div>\n            <h1>You clicked a card you already hit! Game over...</h1>\n            <h2>Final Score: {finalScore}</h2>\n            <h2>High Score: {highScore}</h2>\n            <button \n                className=\"restart-button\" \n                onClick={restartGame}\n            >Play again?\n            </button>\n        </div>\n    )\n}\n\nexport default EndMessage\n","export default __webpack_public_path__ + \"static/media/bulbasaur.e3564c36.png\";","export default __webpack_public_path__ + \"static/media/eevee.f739c039.png\";","export default __webpack_public_path__ + \"static/media/jigglypuff.c1dabe67.png\";","export default __webpack_public_path__ + \"static/media/mawile.eb1dd3b6.png\";","export default __webpack_public_path__ + \"static/media/jirachi.4b335274.png\";","export default __webpack_public_path__ + \"static/media/pikachu.6572dbc3.png\";","export default __webpack_public_path__ + \"static/media/piplup.fc34f1e8.png\";","export default __webpack_public_path__ + \"static/media/ralts.cf2d3c18.png\";","export default __webpack_public_path__ + \"static/media/riolu.a7e78077.png\";","export default __webpack_public_path__ + \"static/media/sableye.27b071db.png\";","export default __webpack_public_path__ + \"static/media/torchic.de2e6e07.png\";","export default __webpack_public_path__ + \"static/media/voltorb.89279068.png\";","import React, { useState, useEffect, useRef } from 'react';\nimport Title from './Title';\nimport Scoreboard from './Scoreboard';\nimport Card from './Card';\nimport EndMessage from './EndMessage';\nimport Bulbasaur from './assets/bulbasaur.png';\nimport Eevee from './assets/eevee.png';\nimport Jigglypuff from './assets/jigglypuff.png';\nimport Mawile from './assets/mawile.png';\nimport Jirachi from './assets/jirachi.png';\nimport Pikachu from './assets/pikachu.png';\nimport Piplup from './assets/piplup.png';\nimport Ralts from './assets/ralts.png';\nimport Riolu from './assets/riolu.png';\nimport Sableye from './assets/sableye.png';\nimport Torchic from './assets/torchic.png';\nimport Voltorb from './assets/voltorb.png';\n\n\nfunction Game() {\n    let [currentScore, setCurrentScore] = useState(0);\n    let [highScore, setHighScore] = useState(0);\n    let [pokeCards, setPokeCards] = useState([\n        {name: 'Bulbasaur', pic: Bulbasaur, hit: false},\n        {name: 'Eevee', pic: Eevee, hit: false},\n        {name: 'Jigglypuff', pic: Jigglypuff, hit: false},\n        {name: 'Mawile', pic: Mawile, hit: false},\n        {name: 'Jirachi', pic: Jirachi, hit: false},\n        {name: 'Pikachu', pic: Pikachu, hit: false},\n        {name: 'Piplup', pic: Piplup, hit: false},\n        {name: 'Ralts', pic: Ralts, hit: false},\n        {name: 'Riolu', pic: Riolu, hit: false},\n        {name: 'Sableye', pic: Sableye, hit: false},\n        {name: 'Torchic', pic: Torchic, hit: false},\n        {name: 'Voltorb', pic: Voltorb, hit: false}\n    ]);\n    let [gameOver, setGameOver] = useState(false);\n\n    const selectCard = (e) => {\n        let index = e.target.parentNode.classList.item(1);\n        if (pokeCards[index].hit) setGameOver(true);\n        else if (!pokeCards[index].hit) {\n            let updatedCard = [{...pokeCards[index], hit: true}];\n            let updatedCardList = pokeCards.slice(0, index)\n                .concat(updatedCard.concat(pokeCards.slice(index + 1)));\n            setPokeCards(shuffle(updatedCardList));\n        }\n    }\n\n  \n    let cardDisplay = useRef(<div className='card-display'>\n        {pokeCards.map((card, index) => <Card \n            pokeName={card.name} \n            pokePic={card.pic}\n            eventListener={selectCard}\n            key={index}\n            no={index}\n            />)}\n            </div>);\n\n    let display = useRef(<div>\n        <Title />\n        <Scoreboard \n            currentScore={currentScore} \n            highScore={highScore}\n            />\n        {cardDisplay.current}\n        </div>);\n\n    \n    const restart = () => {\n        setCurrentScore(0);\n        \n        let resetCards = pokeCards.map(card => {\n            return {...card, hit: true}\n        });\n        setPokeCards(shuffle(resetCards));\n        setGameOver(false);\n        display.current = \n            <div>\n                <Title />\n                <Scoreboard \n                    currentScore={currentScore} \n                    highScore={highScore}\n                />\n                    {cardDisplay.current}\n            </div>\n    }\n\n\n    \n\n    \n    useEffect(() => {\n        cardDisplay.current = \n            <div className='card-display'>\n                {pokeCards.map((card, index) => <Card \n                pokeName={card.name} \n                pokePic={card.pic}\n                eventListener={selectCard}\n                key={index}\n                no={index}\n                />)}\n            </div>\n    });\n\n\n    useEffect(() => {\n        let score = pokeCards.reduce((prev, cur) => prev.hit + cur.hit);\n        setCurrentScore(score);\n        if (currentScore > highScore) setHighScore(score);\n    }, [pokeCards, currentScore, highScore]);\n\n    useEffect(() => {\n        if (gameOver) {\n            display.current = <EndMessage \n            finalScore={currentScore}\n            highScore={highScore}\n            restartGame={restart}\n        />\n        }\n    });\n\n    return(\n        <div>\n            {display.current}\n        </div>\n    );\n}\n\n//function taken from \n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n//Fisher-Yates Shuffle\nfunction shuffle(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n    while(currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = \n            [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n}\n\nexport default Game;\n","import React from 'react';\nimport Game  from './components/Game.js';\n\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app_styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}